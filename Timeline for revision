Basics : 
 -> const
 -> let
 -> var

2.Type conversion and string methods 

->console.log(typeof String(a))  //string conversion
->console.log(typeof number(a))  // number conversion

->toString() method
->slice , substring , substr 
->replace , replaceAll
->toUpperCase , toLowerCase
->concat 
->trimStart() , trimEnd()
->split("," , "|" , " " )
->to check all methods do string. -> a list will pop up 

3.IF else , switch & loops
->same as cPP no quite change 

4. Array Methods 
some important ->
pop
push
shift
unshift
delete
flat
splice
slice
sorting in an array -> function(a,b) { return a-b}  sorts in ascending order


5. Functions and scoping 

6. DOM manipulation 

7.Advanced Array Methods and callback fnc
arr.find
arr.forEach
arr.map
arr.reduce


7. Event listerners 
addEventListerner
removeEvenetListener

8. Local Storage and Session Storage 
sessionStorage.setItem(key,value)
sessionStorage.getItem(key)

.removeItem
.key

also value are passed as stings if we want to pass objects 
we need to pass as JSON.stringify(Obejct)*
                   JSON.parse(String)*


9. SetTimeout and setInterval 

10.OOPS in javacscript 
 ->objects and how can we play with an object 
 ->diffrence b/w object and premitive data types
 
->classes and inheritance in javascript 
->𝐉𝐒 𝐡𝐚𝐬 𝐧𝐨 𝐚𝐜𝐜𝐞𝐬𝐬 𝐦𝐨𝐝𝐢𝐟𝐢𝐫𝐞𝐬 𝐭𝐡𝐚𝐭 𝐢𝐬 𝐩𝐮𝐛𝐥𝐢𝐜 𝐩𝐫𝐢𝐯𝐚𝐭𝐞 𝐚𝐧𝐝 𝐩𝐫𝐨𝐭𝐞𝐜𝐭𝐞𝐝

->Abstraction ->displaying on essential info 
-> encapsulation -> process of wrapping properties and fnc withtin a single unit what class basically does -<
--sometimes referred as data abstraction as well . 

SOME KEYWORDS - > Class   |    Super()->parent class constructor   |   
->creating a child class    -> class <name>  extends  <parent-class>
                                 {
                                   constructor()  -> it's own
                                   {  
                                      super() ->parent constructor after this we define everything 
                                      }
                                  }
 
 10. Execution context and Execution call stack 
 
 ->JS is a single threaded synchronous prog. lang. by default 
 GEC->Global execution context created when we call a script ->all variable are allocated a memory in phase 1 and executed in phase 2 
 -- not sos diffrent from cPP 
 
 11. Asynchronous (Async) JS
  -> notes further ahead in this ex-> setTimeout is an async js fnc 
 


